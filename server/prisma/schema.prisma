// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  username String @unique
  email    String @unique
  password String

  image Image?

  posts    Post[]
  likes    Like[]
  comments Comment[]

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  @@map("user")
}

model Post {
  id String @id @default(uuid())

  legend String?
  image  Image?
  likes  Like[]

  User     User      @relation(fields: [userId], references: [id])
  userId   String
  comments Comment[]

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  @@map("post")
}

model Image {
  id   String @id @default(uuid())
  name String
  url  String
  key  String

  Post   Post?   @relation(fields: [postId], references: [id])
  postId String? @unique

  User   User?   @relation(fields: [userId], references: [id])
  userId String? @unique

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  @@map("image")
}

model Like {
  User   User?  @relation(fields: [userId], references: [id])
  userId String
  Post   Post?  @relation(fields: [postId], references: [id])
  postId String

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  @@id([userId, postId])
  @@map("like")
}

model Comment {
  id      String @id @default(uuid())
  content String

  User   User?  @relation(fields: [userId], references: [id])
  userId String

  Post   Post?  @relation(fields: [postId], references: [id])
  postId String

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  @@map("comment")
}
